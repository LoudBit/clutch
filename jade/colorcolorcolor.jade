extends _layout

block content
  section(ng-controller="ColorColorColorController", style="background:{{background}};")
    //- chromaticity is only option at this point
    //- click a button to add or remove a hue
    //- each hue can be altered within a range (not closer than 15? to adjacent colors)
    //- the colors are optionally named
    //- the colors are listed in rgb format in a table
    .bits.with-gutters.x-100
      .bit
        .el
          label(for="chromaticity") Chromaticity
          br
          select(ng-model="chromaticity", name="chromaticity", ng-options="c as (c + '%') for c in chromaticityScale")
      .bit
        .el
          label(for="chromaticity") Anchor Color
          br
          input(type="text", ng-model="anchorInput")
        //- .el(ng-if="{ background != 'transparent' }")
        //-   label(for="chromaticity") Selected Color
        //-   p {{background}}
      .bit
        .el
          br
          button(ng-click="anchorIt()") Anchor it
      .bit
        .col
          .el
            h1 Anchor
            .bits.with-gutters
              .bit
                .el Lightness: {{anchor.l}}
              .bit
                .el Chromaticity: {{anchor.c}}
              .bit
                .el Hue: {{anchor.h}}
          .el
            h1 Offsets
            .bits.with-gutters
              .bit
                .el Lightness: {{offsets.l}}
              .bit
                .el Chromaticity: {{offsets.c}}
              .bit
                .el Hue: {{offsets.h}}

    .group.x-100
      .col.x-100
        .el.padded
          .bits.x-100
            .bit.x-10.
              Lightness
            .bit.x-5.text-center(ng-repeat="hue in hues track by $id($index)")
              small(style="color:black") {{hue.name}}

          .bits.x-100(ng-repeat="x in hues[0].scale track by $id($index)")
            .bit.x-10
              small {{scale[scale.length - $index - 1]}}%
            .bit.x-5.text-center.valign-middle(ng-repeat="hue in hues track by $id($index)")
              .el.x(ng-click="setBackground(hue.scale[$parent.$index])", title="{{hue.name}}", style="background:{{hue.scale[$parent.$index]}};")
                small(style="color:black")
                  &nbsp;
        br

    .bits.centered.with-gutters
      .bit(ng-repeat="hue in hues")
        .el.padded-y(ng-if="$index % 3 === 1", ng-repeat="color in hue.scale track by $id($index)", title="{{hue.name}}")
          .el.padded-y.round.x-64.y-64.padded(style="background:linear-gradient(to bottom, {{hue.scale[$index-1]}} 0%, {{hue.scale[$index]}} 50%, {{hue.scale[$index+1]}}); box-shadow: inset 0 1px 2px {{hue.scale[$index-1]}}, inset 0 -1px 2px {{hue.scale[$index+1]}}, 0 4px 4px #080808;")

    .bits.centered.with-gutters
      .bit(ng-repeat="hue in hues")
        .el.padded-y
          .el.padded-y.radius.x-64.y-64.padded(style="background:linear-gradient(to bottom, {{hue.scale[2]}} 0%, {{hue.scale[4]}} 50%, {{hue.scale[7]}});")


    .bits.centered
      .bit.half
        h2 SCSS
        textarea.x-100.y-356px.small(style="background:transparent;color:#777;border:none") {{scss}}

    .bits.centered
      .bit.half
        h2 Stylus
        textarea.x-100.y-356px.small(style="background:transparent;color:#777;border:none") {{stylus}}

    //- .group
    //-   .col(ng-repeat="hue in hues")
    //-     .el(ng-repeat="color in hue.scale track by $id($index)", title="{{hue.name}}")
    //-       .el.padded(style="background:{{color}};")
    //-         {{shades[$index]}}{{hue.name}} = {{color}};
